NVM
5 constant _LED \ Led connected to port B, Pin 5
$5005 constant PB_ODR
$5007 constant PB_DDR
$5008 constant PB_CR1
: Setup_B
   Bit5 PB_DDR c! \ Port B outputs
   Bit5 PB_CR1 c! \ set up as push pull outputs
;
: LED.On ( -- )  [ 0 PB_ODR _LED ]B! ;
: LED.Off ( -- ) [ 1 PB_ODR _LED ]B! ;
: FlashLed  LED.ON 2ms LED.Off   
;
: TX.PWR0 \ SEt to 0dBm output and 250kbps
     $0 bit5 >high bit2 >high bit1 >high $06 nRF!1
;
: PAYLOAD.RX ( ---- n1 n2 ... nn ) \ returns n bytes as set by P0_width
   begin
      rx_dr? \ wait until data is ready
   until
    >STANDBY1
   R_RX_PAYLOAD (NRF@!) \ sends command "get bytes in the payload"
   P0_width 0 do
      $ff SPI
      mybuff I + c!
   loop
   _csn.high 
   bit6 R.STATUS nRF!1 
   CLR_INT
   _CE.HD \ go back to being a RX
   ;
: TestRx
   (RX) \ now acting as a RX
   _ce.low
   TX.PWR0
   _ce.high
   begin
      rx_dr?
      if  
         PAYLOAD.RX
         mybuff P0_width type cr
      then
      ?RX \ input on serial line 
      if 32 = else 0 then \ only if it is a space char do we exit
   until
   ;
 \ on power up flash led so we know device is a pong
: Pong
   Setup_B
   Led.On 10ms  
   Led.Off 
   50 0  
   do 
      10ms 
   loop 
   FlashLed
   testrx
   ;
' PONG 'Boot !  
RAM
   
